name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PYTHON: 3.8
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Python ${{ env.PYTHON }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install system pacakges
      run: sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin
    - name: Cache pip and tox
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          .tox
        key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-tox-${{ matrix.python-version }}
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Check format
      run: tox -e format
    - name: Run linters
      continue-on-error: true
      run: tox -e lint

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install system pacakges
      run: sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin
    - name: Cache pip and tox
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
          .tox
        key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
        restore-keys: |
          ${{ runner.os }}-tox-${{ matrix.python-version }}
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Run test
      continue-on-error: ${{ matrix.python-version == '3.10' }}
      run: tox -e py

  conda:
  # needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Set up Python ${{ matrix.python-version }}
      uses: s-weigand/setup-conda@v1.0.5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Conda info
      run: |
        conda --version
        conda info --envs
        which python
        python --version
    - name: Update test environment
      run: |
        conda env update -n base -f ./pyaerocom_env.yml
    - name: Install pyaerocom
      run: |
        python -m pip install --upgrade pip
        python -m pip install . --no-deps
    - name: Run pytest
      run: pytest --cov=pyaerocom/ --cov-report xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1.0.3
      with:
          file: ./coverage.xml
          flags: unittests
